{"version":3,"sources":["firebase/firebase.js","components/Course/CourseItem.js","components/Course/CourseList.js","actions/course.js","actions/filters.js","components/Course/CourseFilters.js","components/CourseDashboard.js","components/School/SchoolDropdown.js","components/Course/CourseForm.js","components/Course/AddCourse.js","components/Nav/Nav.js","components/Course/EditCourse.js","actions/school.js","components/School/SchoolEditList.js","components/School/AddSchool.js","router/AppRouter.js","reducers/courses.js","reducers/filters.js","reducers/schools.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","CourseItem","props","react_default","a","createElement","className","Link","to","concat","course","id","courseName","courseLang","toUpperCase","school","courseLength","coursePrice","courseDescription","connect","state","console","log","courses","filters","filter","toLowerCase","includes","text","sort","b","sortBy","map","Course_CourseItem","key","setTextFilter","type","sortByLanguage","sortBySchool","sortByCourseName","CourseFilters","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSortBy","e","target","value","setState","dispatch","onSearch","searchField","placeholder","onChange","disabled","React","Component","CourseDashboard","Course_CourseFilters","Course_CourseList","schools","CourseForm","onLanguageChange","onCourseName","onPrice","onLength","onCourseDescription","onSchool","onSubmit","preventDefault","submit","School_SchoolDropdown","onClick","Course_CourseForm","expenseData","arguments","length","undefined","_expenseData$courseLa","_expenseData$courseNa","_expenseData$coursePr","_expenseData$courseLe","_expenseData$courseDe","_expenseData$school","ref","push","then","addCourse","objectSpread","startAddCourse","courseSchool","history","Nav","NavLink","activeClassName","exact","find","match","params","updates","addSchool","uuid","removeSchool","AddSchool","newSchool","getSchool","_this2","School_SchoolEditList","AppRouter","BrowserRouter","components_Nav_Nav","Switch","Route","path","component","AddCourse","EditCourse","coursesReducerDefaultState","coursesReducer","action","toConsumableArray","_ref","filtersDefaultState","filtersReducer","schoolsReducerDefaultState","schoolsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","es","router_AppRouter","Boolean","location","hostname","ReactDOM","render","document","getElementById","once","snapshot","forEach","childSnapshot","val","setCourses","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53fdd392.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\n\n//Set - save data to specific area replacing any existing\n\n\nvar config = {\n  apiKey: \"AIzaSyD6IHYG7mVNUflT-XZHsR7FZ1I7mf9lD1w\",\n  authDomain: \"course-selector-1e2f5.firebaseapp.com\",\n  databaseURL: \"https://course-selector-1e2f5.firebaseio.com\",\n  projectId: \"course-selector-1e2f5\",\n  storageBucket: \"course-selector-1e2f5.appspot.com\",\n  messagingSenderId: \"455070175641\"\n};\n\n\nfirebase.initializeApp(config);\n\nconst database = firebase.database();\n\nexport { firebase, database as default };\n\n// function addSchool(schoolName) {\n//   database.ref(`schools/`).push(schoolName);\n// }\n// database.ref().on('value', function(snapshot){\n//   // console.log(snapshot.val());\n// })\n// addSchool('London');\n// addSchool('la');\n\n\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../../styles/CourseItem.css\";\n\nconst CourseItem = props => (\n  <div className=\"courseItem\">\n    <Link className=\"courseNameLink\" to={`/edit/${props.course.id}`}>\n      <h1>{props.course.courseName}</h1>\n    </Link>\n    <div className=\"languageDisplay\">\n      <p>{props.course.courseLang.toUpperCase()}</p>\n    </div>\n    <div className=\"courseFlex\">\n      <div>\n        <p>School: {props.course.school}</p>\n        <p>Weeks Available: {props.course.courseLength}</p>\n        <p>Price per week: {props.course.coursePrice}</p>\n      </div>\n      <div>\n        <p className='bold'>Course Description</p>\n        <p>{props.course.courseDescription}</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default CourseItem;\n","import React from \"react\";\nimport { connect } from 'react-redux';\n\nimport { getVisibleCourses } from '../../actions/course';\nimport CourseItem from './CourseItem';\n\n\nconst CourseList = (props) => (\n    <div>\n        {props.courses.map((course)=>{\n            console.log(props.courses);\n            console.log(props)\n            return <CourseItem key={course.id} course={course}/>\n        })}\n    </div>\n)\n\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n        courses: getVisibleCourses(state.courses, state.filters)\n    }\n}\n\nexport default connect(mapStateToProps)(CourseList);","import uuid from \"uuid\";\nimport database from '../firebase/firebase';\n\n//Redux way\n\n//component calls action generator\n//action generator generates object returning it\n//component dispatches object\n//redux store updates \n\n\n//Firebase way\n\n//component calls action generator\n//action generator generates FUNCTION returning it\n//component dispatches FUNCTION\n//function runs \n\nexport const addCourse = (course) => ({\n  type: \"ADD_COURSE\",\n  course\n});\n\nexport const startAddCourse = (expenseData = {}) => {\n    return (dispatch) => {\n        const {\n            courseLang = \"en\",\n            courseName = \"\",\n            coursePrice = \"\",\n            courseLength = \"\",\n            courseDescription = \"\",\n            school = ''\n        } = expenseData;\n        const course = {courseLang, courseName, coursePrice, courseLength, courseDescription, school}\n        database.ref('courses').push(course).then((ref)=>{\n            dispatch(addCourse({\n                id: ref.key,\n                ...course\n            }))\n        });\n    }\n}\n\nexport const editCourse = (id, updates) => ({\n    type: 'EDIT_COURSE',\n    id,\n    updates\n});\n\nexport const removeCourse = ({id}) => ({\n    type: 'REMOVE_COURSE',\n    id\n});\n\nexport const getVisibleCourses = (courses, filters) => {\n    return courses.filter((course)=>{\n        return course.courseName.toLowerCase().includes(filters.text.toLowerCase());\n    }).sort((a,b)=> {\n        if(filters.sortBy === 'language'){\n            return a.courseLang > b.courseLang ? 1 : -1;\n        }\n        if(filters.sortBy === 'school'){\n            return a.school > b.school ? 1 : -1; \n        }\n        if(filters.sortBy === 'courseName'){\n            return a.courseName > b.courseName ? 1 : -1; \n        }\n    })\n}\n\n\nexport const setCourses = (courses) => ({\n    type: 'SET_COURSES',\n    courses\n});\n\nexport const startSetCourses = () => {\n    return (dispatch) => {\n        return database.ref('courses').once('value').then((snapshot)=>{\n            const courses = [];\n\n            snapshot.forEach((childSnapshot)=>{\n                courses.push({\n                    id: childSnapshot.key,\n                    ...childSnapshot.val()\n                })\n            })\n            dispatch(setCourses(courses));\n        })\n    }\n};\n\n","\n\nexport const setTextFilter = (text) => ({\n    type: 'SET_TEXT_FILTER',\n    text\n});\n\nexport const sortByLanguage = () => ({\n    type: 'SORT_BY_LANGUAGE'\n});\n\nexport const sortBySchool = () => ({\n    type: 'SORT_BY_SCHOOL'\n});\n\nexport const sortByCourseName = () => ({\n    type: 'SORT_BY_COURSENAME'\n});\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sortByLanguage, sortBySchool, sortByCourseName, setTextFilter } from \"../../actions/filters\";\n\nclass CourseFilters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sortBy: \"no-value\",\n      searchField: \"\"\n    };\n  }\n\n  onSortBy = e => {\n    var sortBy = e.target.value;\n    this.setState(\n      () => ({ sortBy }),\n      () => {\n        if (this.state.sortBy === \"language\") {\n            this.props.dispatch(sortByLanguage());\n          console.log(this.props);\n        } else if (this.state.sortBy === \"school\") {\n            this.props.dispatch(sortBySchool());\n        }\n        else if (this.state.sortBy === \"courseName\") {\n            this.props.dispatch(sortByCourseName());\n        }\n      }\n    );\n  };\n\n  onSearch = (e) => {\n    var searchField = e.target.value;\n    this.setState(() => ({ searchField }), () => {\n        this.props.dispatch(setTextFilter(this.state.searchField))\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n      <input\n          placeholder=\"Search\"\n          value={this.state.searchField}\n          onChange={this.onSearch}\n        />\n        <select onChange={this.onSortBy} value={this.state.sortBy}>\n          <option value=\"no-value\" disabled>\n            Sort by\n          </option>\n          <option value=\"language\">Language</option>\n          <option value=\"school\">School</option>\n          <option value=\"courseName\">Name</option>\n        </select>\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.filters, \"filters\");\n  return {\n      filter: state.filters\n  };\n};\n\nexport default connect(mapStateToProps)(CourseFilters);\n","import React from \"react\";\nimport CourseList from './Course/CourseList';\nimport CourseFilters from './Course/CourseFilters';\nimport \"../styles/dashboard.css\";\n\n\nconst CourseDashboard = () => (\n  <div className=\"page-container\">\n    <div className=\"page-title\">\n      <h1>Course dashboard</h1>\n    </div>\n    <CourseFilters/>\n    <div className=\"courseListContainer\">\n        <CourseList/>\n    </div>\n  </div>\n);\n\nexport default CourseDashboard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport '../../styles/CourseForm.css'\n\nconst SchoolDropdown = props => (\n    <select value={props.value} onChange={props.onChange}>\n      <option value=\"no-value\" disabled>\n        Select school\n      </option>\n      {props.schools.map(school => {\n        return <option key={school}>{school}</option>;\n      })}\n    </select>\n);\n\nconst mapStateToProps = state => {\n  console.log(state.schools, 'schoolList');\n  return {\n    schools: state.schools\n  };\n};\n\nexport default connect(mapStateToProps)(SchoolDropdown);\n","import React from \"react\";\n\nimport '../../styles/CourseForm.css'\nimport SchoolDropdown from '../School/SchoolDropdown';\n\nclass CourseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        courseLang: props.course ? props.course.courseLang :'en',\n        courseName: props.course ? props.course.courseName :'',\n        courseLength: props.course ? props.course.courseLength :'no-value',\n        coursePrice: props.course ? props.course.coursePrice :'',\n        courseDescription: props.course ? props.course.courseDescription :'',\n        school: props.course ? props.course.school : 'no-value'\n    }\n  }\n\n  onLanguageChange = (e) => {\n    var courseLang = e.target.value;\n    this.setState(() => ({ courseLang }));\n  };\n  onCourseName = (e) => {\n    var courseName = e.target.value;\n    this.setState(() => ({ courseName }));\n  };\n\n  onPrice = (e) => {\n    var coursePrice = e.target.value;\n    this.setState(() => ({ coursePrice }));\n  };\n\n  onLength = (e) => {\n    var courseLength = e.target.value;\n    this.setState(() => ({ courseLength }));\n  };\n  onCourseDescription = (e) => {\n    var courseDescription = e.target.value;\n    this.setState(() => ({ courseDescription }));\n  };\n\n  onSchool = (e) => {\n    var school = e.target.value;\n    this.setState(() => ({ school }));\n  };\n\n  onSubmit = (e) => {\n     e.preventDefault();\n     console.log('click');\n     this.props.submit({\n      courseLang: this.state.courseLang,\n      courseName: this.state.courseName,\n      coursePrice: this.state.coursePrice,\n      courseLength: this.state.courseLength,\n      courseDescription: this.state.courseDescription,\n      school: this.state.school\n     });\n  }\n\n  render() {\n    return (\n      <div>\n        <form>\n          <select onChange={this.onLanguageChange}>\n            <option>EN</option>\n            <option>FR</option>\n            <option>DE</option>\n            <option>ES</option>\n          </select>\n          <input placeholder=\"Course name\" onChange={this.onCourseName} value={this.state.courseName}/>\n          <input placeholder=\"1 Week Price\" onChange={this.onPrice} value={this.state.coursePrice}/>\n          <select value={this.state.courseLength} onChange={this.onLength}>\n            <option value='no-value' disabled>Up to weeks Available</option>\n            <option value='1 week'>1 Weeks</option>\n            <option value='2 week'>2 Weeks</option>\n            <option value='3 week'>3 Weeks</option>\n            <option value='4 week'>4 Weeks</option>\n            <option value='5 week'>5 Weeks</option>\n            <option value='6 week'>6 Weeks</option>\n            <option value='7 week'>7 Weeks</option>\n            <option value='8 week'>8 Weeks</option>\n            <option value='9 week'>9 Weeks</option>\n            <option value='10 week'>10 Weeks</option>\n          </select>\n          \n          <textarea placeholder=\"Course description\" onChange={this.onCourseDescription} value={this.state.courseDescription}/>\n          <SchoolDropdown value={this.state.school} onChange={this.onSchool}/>\n          <button onClick={this.onSubmit}>+</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CourseForm;\n","import React from \"react\";\nimport CourseForm from \"../Course/CourseForm\";\nimport \"../../styles/nav.css\";\nimport { connect } from \"react-redux\";\nimport { startAddCourse } from '../../actions/course';\n\nconst AddCourse = (props) => {\n  return (\n    <div className=\"page-container\"> \n      <div className=\"page-title\">\n        <h1>Add Course</h1>\n      </div>\n      <CourseForm \n      submit={(course)=>{\n        console.log(course, 'course');\n        props.dispatch(startAddCourse({\n          courseLang: course.courseLang,\n          courseName: course.courseName,\n          coursePrice: course.coursePrice,\n          courseLength: course.courseLength,\n          courseDescription: course.courseDescription,\n          courseSchool: course.school\n        }));\n        props.history.push('/');\n      }} />\n    </div>\n  );\n};\n\nexport default connect()(AddCourse);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../../styles/nav.css';\n\n\nconst Nav = () => (\n    <div className=\"nav\">\n        <NavLink to=\"/\" activeClassName=\"is-active\" exact={true}>Dashboard</NavLink>\n        <NavLink to=\"/add\" activeClassName=\"is-active\">Add Course</NavLink>\n        <NavLink to=\"/addSchool\" activeClassName=\"is-active\">Add School</NavLink>\n        <NavLink to=\"/preview\" activeClassName=\"is-active\">Preview</NavLink>\n    </div>\n)\n\nexport default Nav;","import React from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport \"../../styles/nav.css\";\nimport { connect } from 'react-redux';\nimport { editCourse, removeCourse } from \"../../actions/course\";\n\nconst EditCourse = (props) => {\n  return (\n    <div className=\"page-container\">\n      <h1>Editing - {props.course.courseName}</h1>\n      <CourseForm course={props.course}\n      submit={(course)=>{\n        console.log(course)\n        props.dispatch(editCourse(props.course.id, {\n          courseLang: course.courseLang,\n          courseName: course.courseName,\n          coursePrice: course.coursePrice,\n          courseLength: course.courseLength,\n          courseDescription: course.courseDescription,\n          school: course.school\n        }));\n        props.history.push('/');\n      }} />\n     <button onClick={()=>{\n       console.log(props.course.id);\n       console.log(props.course);\n       props.dispatch(removeCourse({id: props.course.id}));\n       props.history.push('/');\n     }}>Delete course</button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    course: state.courses.find((course)=>{\n        if(course.id === props.match.params.id){\n            return course\n        }\n    })\n  };\n};\n\nexport default connect(mapStateToProps)(EditCourse);\n","import uuid from \"uuid\";\n\n//Redux way\n\n//component calls action generator\n//action generator generates object returning it\n//component dispatches object\n//redux store updates \n\n//Firebase way \n\n//component calls action generator\n//action generator generates FUNCTION returning it\n//component dispatches FUNCTION\n//function runs\n\nexport const addSchool = (school = \"\") => ({\n  type: \"ADD_SCHOOL\",\n  id:uuid(),\n  school\n});\n\nexport const removeSchool = (school) => ({\n  type: \"REMOVE_SCHOOL\",\n  school\n});\n\nexport const getSchools = (schools) => ({\n  type: 'GET_SCHOOLS',\n  schools\n});\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {removeSchool} from '../../actions/school';\n\n\n\nconst SchoolEditList = (props) => {\n    return(\n        <ul className=\"school-list\">\n            {props.schools.map((school)=>{\n                return <li key={school}><p>{school}</p> <button onClick={()=>{\n                    props.dispatch(removeSchool(school));\n                }}>Remove</button></li>\n            })}\n        </ul>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        schools: state.schools\n    };\n};\n\n\nexport default connect(mapStateToProps)(SchoolEditList);","import React from \"react\";\nimport \"../../styles/nav.css\";\nimport \"../../styles/schools.css\";\nimport { connect } from \"react-redux\";\nimport { addSchool } from '../../actions/school';\nimport SchoolEditList from './SchoolEditList';\n\n\nclass AddSchool extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            newSchool: '',\n            schools: {}\n        }\n    }\n    onClick = (e) =>{\n        e.preventDefault();\n        this.props.dispatch(addSchool(this.state.newSchool));\n        // console.log(this.props)\n        // this.props.history.push('/');\n\n    }\n    getSchool = (e) => {\n        this.setState({\n            newSchool: e.target.value\n        },()=>{\n            console.log(this.state);\n        });\n    }\n    render(){\n        return(\n            <div className='page-container'>\n                <h1>Edit school</h1>\n                <SchoolEditList/>\n                <form>\n                    <input onChange={(e) =>{\n                        this.getSchool(e);\n                    }} placeholder='New school'/>\n                    <button onClick={(e)=>{\n                        this.onClick(e);\n                    }}>Add School</button>\n                </form> \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state.schools, \"Add SChool page\");\n    return {\n        schools: state.schools\n    };\n  };\n\nexport default connect(mapStateToProps)(AddSchool);","import React from \"react\";\nimport '../styles/nav.css';\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CourseDashboard from \"../components/CourseDashboard\";\nimport AddCourse from '../components/Course/AddCourse';\nimport Nav from \"../components/Nav/Nav\";\nimport EditCourse from '../components/Course/EditCourse';\nimport AddSchool from \"../components/School/AddSchool\";\n\n\n\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div>\n    <Nav className='nav-container'/>\n      <Switch>\n        <Route path=\"/\" component={CourseDashboard} exact={true}/>\n        <Route path=\"/add\" component={AddCourse} />\n        <Route path=\"/edit/:id\" component={EditCourse} />\n        <Route path=\"/addSchool\" component={AddSchool} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;\n","const coursesReducerDefaultState = []\nconst coursesReducer = ( state = coursesReducerDefaultState, action ) => {\n    switch(action.type){\n        case 'ADD_COURSE':\n            return [\n                ...state,\n                action.course\n            ]\n        case 'SET_COURSES':\n            return action.courses\n        case 'REMOVE_COURSE':\n            return state.filter(({ id }) => {\n                return id !== action.id;\n            } );\n        case 'EDIT_COURSE':\n            return state.map((course)=>{\n                if(course.id === action.id){\n                    return {\n                        ...course,\n                        ...action.updates\n                    }\n                } else{\n                    return course;\n                }\n            })\n        default:\n            return state;\n    } \n}\n\nexport default coursesReducer;","const filtersDefaultState = {\n    text: \"\",\n    sortBy: \"language\"\n};\n\nconst filtersReducer = (state = filtersDefaultState, action) => {\n  switch (action.type) {\n    case \"SET_TEXT_FILTER\":\n      return {\n        ...state,\n        text: action.text\n      }\n    case 'SORT_BY_LANGUAGE':\n      return {\n        ...state,\n        sortBy: 'language'\n      }\n    case 'SORT_BY_SCHOOL':\n      return {\n        ...state,\n        sortBy: 'school'\n      }\n    case 'SORT_BY_COURSENAME':\n      return {\n        ...state,\n        sortBy: 'courseName'\n      }\n    default:\n      return state;\n  }\n};\n\nexport default filtersReducer;\n","\nconst schoolsReducerDefaultState = []\n\nconst schoolsReducer = ( state = schoolsReducerDefaultState, action ) => {\n    switch(action.type){\n        case 'ADD_SCHOOL':\n            return [\n                ...state,\n                action.school\n            ]\n        case 'REMOVE_SCHOOL':\n            return state.filter((school) => {\n                return school !== action.school;\n            } );\n        default:\n            return state;\n    } \n}\n\nexport default schoolsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport coursesReducer from \"../reducers/courses\";\nimport filtersReducer from \"../reducers/filters\";\nimport schoolsReducer from '../reducers/schools';\nimport thunk from 'redux-thunk';\n\nimport { startSetCourses, getVisibleCourses } from \"../actions/course\";\nimport { addSchool, removeSchool, getSchools } from '../actions/school';\nimport {sortBySchool} from '../actions/filters';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__COMPOSE__ || compose;\n\nconst store = createStore(\n  combineReducers({\n    courses: coursesReducer,\n    filters: filtersReducer,\n    schools: schoolsReducer\n  }),\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n// store.subscribe(() => {\n//   var state = store.getState();\n//   const visibleState = getVisibleCourses(state.courses, state.filters);\n//   console.log(\"Redux Store\", state);\n// });\n\n// store.dispatch(addCourse({courseLang: \"fr\", courseName: \"tutorial 1\", coursePrice: 1000, courseLength: \"2 week\", courseDescription:\"dfghjk\", school: \"Taunton\"}));\n// store.dispatch(addCourse({courseLang: \"en\", courseName: \"tutorial 2\", coursePrice: 500, courseLength: \"4 week\", courseDescription:\"aaa\", school: \"Oxford\"}));\n// store.dispatch(addCourse({courseLang: \"de\", courseName: \"tutorial 3\", coursePrice: 465, courseLength: \"5 week\", courseDescription:\"sss\", school: \"London\"}));\n// store.dispatch(addCourse({courseLang: \"fr\", courseName: \"tutorial 4\", coursePrice: 386, courseLength: \"6 week\", courseDescription:\"ddd\", school: \"Cambridge\"}));\n// store.dispatch(addCourse({courseLang: \"fr\", courseName: \"tutorial 15\", coursePrice: 673, courseLength: \"8 week\", courseDescription:\"ccc\", school: \"Oxford\"}));\n \n\n// store.dispatch(addSchool('London'));\n// store.dispatch(addSchool('Oxford'));\n// store.dispatch(addSchool('Taunton'));\n// store.dispatch(addSchool('Cambridge'));\n// store.dispatch(addSchool('Boston'));\n\n// store.dispatch(sortBySchool());\n\n// store.dispatch(getSchools());\n\n// store.dispatch(removeSchool('London'));\n\n// store.dispatch(removeCourse({id: course1.course.id}));\n// store.dispatch(editCourse(course2.course.id, { coursePrice: 500 }));\n\n// store.dispatch(sortBySchool())\n// store.dispatch(sortByLanguage())\n// store.dispatch(setTextFilter(''));\n\nexport default store;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./router/AppRouter\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nimport \"./firebase/firebase\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//screen showing \nimport { startSetCourses } from './actions/course';\nimport store from \"./store/store\";\n\n\n\n\n\n\nReactDOM.render(<p>Loading</p>, document.getElementById('root'));\n\nstore.dispatch(startSetCourses()).then(()=>{\n    ReactDOM.render(<App />, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}